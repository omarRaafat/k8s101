apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-cpr
  annotations:
    # External Load Balancer  
    kubernetes.io/ingress.class: "gce"  
    # Static IP for Ingress Service
    kubernetes.io/ingress.global-static-ip-name: "k8s-global-static-ip"  # created by gcloud command
    # Google Managed SSL Certificates
    networking.gke.io/managed-certificates: managed-cert-for-ingress
    # SSL Redirect HTTP to HTTPS
    networking.gke.io/v1beta1.FrontendConfig: "https-redirect-ingress-frontend-config" 
    # External DNS - For creating a Record Set in Google Cloud Cloud DNS
    external-dns.alpha.kubernetes.io/hostname: app.lara101.dev   # created by helm 
    
spec: 
  defaultBackend:
    service:
      name: app1-nginx-nodeport-service
      port:
        number: 80                            
  rules:
    - host: app2.lara101.dev   # if this subdomain note exists , external-dns will create record set for it
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app2-nginx-nodeport-service
                port:
                  number: 80
    - host: app3.lara101.dev
      http:
        paths:           
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app3-nginx-nodeport-service
                port: 
                  number: 80              
    
#          - path: /
#            pathType: Prefix
#            backend:
#              service:
#                name: app3-nginx-nodeport-service
#                port: 
#                  number: 80                           


# helm upgrade --install external-dns external-dns/external-dns --set provider=google --set policy=sync --set google-zone-visibility=public --set txt-owner-id=k8s --set serviceAccount.create=false --set serviceAccount.name=K8S_SERVICE_ACCOUNT_NAME -n K8S_NS